const express = require('express');
const connectDB = require('./db');
require('dotenv').config();
const cors = require('cors');
const http = require('http'); // âœ… ThÃªm
const { Server } = require('socket.io'); // âœ… ThÃªm
const socketHandler = require('./sockets/socket'); // âœ… ThÃªm - táº¡o file nÃ y á»Ÿ bÆ°á»›c sau

const app = express();
const server = http.createServer(app); // âœ… Táº¡o server tá»« app

connectDB();

app.use(express.json());

app.use(cors({
  origin: 'http://localhost:3000',
  credentials: true,
}));

// Routes
app.use('/api/auth', require('./routes/authRoutes'));
app.use('/api/post', require('./routes/postRoutes'));
app.use('/api/user', require('./routes/userRoutes'));
app.use('/api/comment', require('./routes/commentRoutes'));
app.use('/api/chat', require('./routes/chatRoutes'));
app.use('/api/notification', require('./routes/notificationRoutes'));


// âœ… Khá»Ÿi táº¡o Socket.IO server
const io = new Server(server, {
  cors: {
    origin: 'http://localhost:3000',
    methods: ['GET', 'POST']
  }
});

// âœ… Gáº¯n io vÃ o global Ä‘á»ƒ sá»­ dá»¥ng trong controller
global.io = io;

// âœ… Xá»­ lÃ½ cÃ¡c sá»± kiá»‡n realtime (setup, message, notification)
socketHandler(io); // sáº½ táº¡o á»Ÿ bÆ°á»›c tiáº¿p theo

// âœ… Cháº¡y server
const PORT = process.env.PORT || 3001;
server.listen(PORT, () => {
  console.log(`ðŸš€ Server is running on port ${PORT}`);
});

module.exports = app;
